import { type Session } from "next-auth";
import { SessionProvider } from "next-auth/react";
import { type AppProps } from "next/app";

import { api } from "~/utils/api";

import "~/styles/globals.css";

import { type NextPage } from "next";
import { type ReactElement } from "react";
import Head from "next/head";

import FavIcon from "~/assets/Favicon_Logo.png";
import ToastProvider from "~/components/providers/toast-provider";

export type NextPageWithLayout<P = object, IP = P> = NextPage<P, IP> & {
  getLayout?: (page: ReactElement) => JSX.Element;
};

type ComponentWithLayout = AppProps & {
  Component: NextPageWithLayout;
  session: Session | null;
};

const MyApp = ({ Component, session, pageProps }: ComponentWithLayout) => {
  const getLayout = Component.getLayout ?? ((page) => page);
  return (
    <SessionProvider session={session}>
      <ToastProvider>
        <Head>
          <title>Empowering Education Management</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href={FavIcon.src} />
        </Head>

        {getLayout(<Component {...pageProps} />)}
      </ToastProvider>
    </SessionProvider>
  );
};

export default api.withTRPC(MyApp);
